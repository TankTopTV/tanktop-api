{"name":"Tanktop-api","tagline":"Tank Top TV APIs","body":"# Tank Top TV API\r\n\r\nWelcome to the Tank Top TV APIs.  These are free to use for non-commercial use within reasonable usage limits, but please get in touch with us at <hello@tanktop.tv> if you'd like to use them for commercial purposes.\r\n\r\nYou will need an API key.  Contact <hello@tanktop.tv> for details.\r\n\r\n1. [Movie and TV matching API](#Matching)\r\n2. [Movie and TV sources](#Sources)\r\n3. [TV and Movie Source Ingestion](#Ingestion)\r\n4. [Listing Movies and TV](#ItemLists)\r\n5. [TV and Movie data](#ItemData)\r\n5. [User Profiles](#UserProfiles)\r\n6. [User Actions and Events](#UserActions)\r\n7. [Personalised Movie & TV lists](#PersonalizedLists)\r\n8. [Recommendations](#Recommendations)\r\n9. [Search & typeahead](#Search)\r\n\r\nWe're still in the process of documenting our APIs but please get in touch if you're interested in using an endpoint that is not fully written-up yet.\r\n\r\n## API usage\r\n\r\nYou will need an API key.  Contact <hello@tanktop.tv> for details.\r\n\r\nData is returned in JSON format.\r\n\r\n## <a name=\"Matching\"></a> Movie and TV matching API\r\nUse this API to match items in your catalog against the TankTop entertainment graph.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`GET /api/1/<apikey>/match/<itemtype>/`| Get matches for a TV programme or movie|\r\n\r\nValid itemtypes are `movie` and `programme`.\r\n\r\n#### Parameters\r\n| Name     | Value  | Required |\r\n|:--       |:--     | :--:     |\r\n| title    | Programme Title | y |\r\n| year     | Year of first release | n |\r\n| director | Director (Movies only)  | n |\r\n| cast     | Cast members.  Any cast members you include help narrow down the match. Repeat the parameter to specify multiple cast members | n |\r\n\r\n#### Return values\r\n\r\n| Name | Description |\r\n|:-----|:------------|\r\n| match_type | M, N or C.  M means there is a good match, N means there's no good match.  C means there are multiple good looking matches, but its too close to say which is correct |\r\n\r\nIf match_type is M the response contains the following additional fields\r\n\r\n| Name | Description |\r\n|:-----|:------------|\r\n| title | title |\r\n| director | Director - movies only |\r\n| year | Year of first release |\r\n| tt_id | TankTop ID for the item |\r\n| rt_id | Rotten Tomatoes ID for the item (if available) |\r\n| imdb_id | IMDB ID for the item (if available) |\r\n\r\nIf match_type is N or C then the response contains the following additional fields\r\n\r\n| Name | Description |\r\n|:-----|:------------|\r\n| candidates| An array of candidate matches, best first |\r\n\r\nThe array contains elements with the following fields\r\n\r\n| Name | Description |\r\n|:-----|:------------|\r\n| score | match score.  Higher is better.  Anything above 3 is considered a reasonable match |\r\n| debug | An array of strings detailing the progress of this match |\r\n| title | title |\r\n| director | Director - movies only |\r\n| year | Year of first release |\r\n| tt_id | Tanktop ID for the item |\r\n| rt_id | Rotten Tomatoes ID for the item (if available) |\r\n| imdb_id | IMDB ID for the item (if available) |\r\n\r\n#### Examples\r\n\r\n##### Request\r\n`http://movies.tanktop.tv/api/1/<apikey>/match/movie/?title=The%20Hunger%20Games&director=Gary%20Ross&year=2012`\r\n\r\n##### Response\r\n```json\r\n{\r\n    director: \"Gary Ross\",\r\n    imdb_id: \"1392170\",\r\n    match_type: \"M\",\r\n    rt_id: 771190618,\r\n    title: \"The Hunger Games\",\r\n    tt_id: 2108,\r\n    year: 2012\r\n}\r\n```\r\n\r\n##### Request\r\n`http://movies.tanktop.tv/api/1/<apikey>/match/programme/?title=Vikings&cast=Travis+Fimmel&cast=Clive+Standen`\r\n##### Response\r\n```json\r\n{\r\n    imdb_id: \"tt2306299\",\r\n    match_type: \"M\",\r\n    title: \"Vikings\",\r\n    tt_id: 268,\r\n    tvdb_id: 260449,\r\n}\r\n```\r\n\r\n### Matching and ingestion service\r\nProvide us with a catalog feed or API and we will match and ingest it for you.\r\n\r\n## <a name=\"Sources\"></a> Movie and TV Sources\r\nSources are providers of movies and TV, e.g. BBC iPlayer, iTunes.  This endpoint lists the sources that are currently\r\navailable.  You will need source IDs from this endpoint to query what TV shows and Movies are available across a basket\r\nof sources.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`GET /api/1/<apikey>/source/`| List the sources currently available |\r\n\r\n| key | value |\r\n|:--|:--|\r\n|id | Identifier for the source |\r\n|payment_model| Either F for free or Ad supported, P for pay as you go, S for subscription or U for unknown.  New sources may be briefly listed as unknown |\r\n|country| Country for the source.  For example iTunes has different catalogs for the UK and US. These are listed as two separate sources with different countries.|\r\n|display_name| A user-appropriate name for the source |\r\n|name| TankTop's internal name for the source |\r\n\r\n\r\n#### Response\r\n```json\r\n{\r\n    \"sources\": [ {\r\n            \"id\": 1,\r\n            \"payment_model\": \"F\",\r\n            \"country\": \"GB\",\r\n            \"display_name\": \"BBC\",\r\n            \"name\": \"BBC\"\r\n        }, {\r\n            \"id\": 2,\r\n            \"payment_model\": \"P\",\r\n            \"country\": \"GB\",\r\n            \"display_name\": \"Virgin Online Movies\",\r\n            \"name\": \"VirginTV\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## <a name=\"Ingestion\"></a> TV and Movie Source Ingestion\r\nTell TankTop about your Movie and TV catalog so that we can list it in our public services and/or in your white-label UI.  Please contact us to be allocated a source ID.  Note only the owner of a source may ingest it.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`POST /api/1/<apikey>/ingest/<sourceid>/`| Set the current contents for a TV and Movie source |\r\n\r\nPost a JSON body to set the current contents of the source\r\n\r\n```json\r\n{\r\n    timestamp: <Format?>\r\n    tv: []\r\n    movies: []\r\n}\r\n```\r\n\r\n### TV format\r\n\r\nDocumentation coming soon.\r\n\r\n### Movie format\r\n\r\nDocumentation coming soon.\r\n\r\n## <a name=\"ItemLists\"></a>TV and Movie lists\r\nGet lists of TV & Movies.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`GET /api/1/<apikey>/list/_/<itemtype>/`| Get metadata for a single item |\r\n\r\n### Parameters\r\n\r\n| Name     | Value  |\r\n|:--       |:--     |\r\n| source_id | source IDs to include. Items are only returned if they are currently available on one of the given services. If none are specified then all items are returned whether the items are current or not |\r\n| director_id| Movies only.  Return movies directed by this director|\r\n| actor_id | Return items staring the actor|\r\n|category_id| Return items in the category|\r\n|max_price| Return items that are available on the included sources below the supplied price.  Price should be in pence or cents.  Note we do not yet support currency conversions |\r\n|min_year | |\r\n|max_year | |\r\n|rent | |\r\n|buy | |\r\n|start| Where to start in the list of results. default 0|\r\n|count| How many ids to return. default 12|\r\n|query| |\r\n\r\n### Returned values\r\n\r\n\r\n## <a name=\"ItemData\"></a>TV and Movie data\r\nGet metadata for the movies & TV shows.\r\n\r\n**Note**: This does not include synopses or images.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`GET /api/1/<apikey>/<itemtype>/<itemid>/`| Get metadata for a single item |\r\n|`GET /api/1/<apikey>/<itemtype>/?id=X&id=Y`| Get metadata for a number of items |\r\n\r\nMetadata format documentation coming soon.\r\n\r\n## <a name=\"UserProfiles\"></a> User Profiles\r\n\r\nUser profiles are only visible to the service that creates them.  The service may provide their own user IDs.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`PUT /api/1/<apikey>/user/<userid>/` | create a user using your user id and set its initial profile|\r\n|`POST /api/1/<apikey>/user/` | create a user, we'll choose the user id|\r\n|`PATCH /api/1/<apikey>/user/<userid>/` | update an existing user profile|\r\n|`POST /api/1/<apikey>/user/<userid>/` | update an existing user profile|\r\n|`GET /api/1/<apikey>/user/<userid>/` | retrieve user profile|\r\n|`DELETE /api/1/<apikey>/user/<userid>/` | deactivate a user|\r\n\r\nThe user profile is a set of key, value pairs.  Certain keys have meaning to the system, but arbitrary pairs may be\r\nstored. Keys beginning with _ are reserved.\r\n\r\n| key | value |\r\n|:--|:--|\r\n|id | user ID corresponding to the profile |\r\n\r\n## <a name=\"UserActions\"></a> User Actions and Events\r\nThis is for tracking events that take place on your system so that user actions can feed into personalized listings and recommendations, as well as into analytics tracking.\r\n\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`POST /api/1/<apikey>/event/<userid>/<eventname>/<itemtype>/<itemid>/[<value>/]` | Create an event or add to a list |\r\n|`DELETE /api/1/<apikey>/event/<userid>/<eventname>/<itemtype>/<itemid>/`| Delete an event or remove from a list|\r\n|`GET /api/1/<apikey>/event/<userid>/<eventname>/<itemtype>/`| Get the items in a list, or for which an event has happened|\r\n\r\n\r\nPOST to add to a list, DELETE to remove, GET returns the items currently in a list\r\n\r\n### Event descriptions\r\n\r\nDocumentation coming soon.\r\n\r\n## <a name=\"PersonalizedLists\"></a> Personalized Movie and TV lists\r\n\r\nGet personalized listings for movie & TV shows.  This is the list of available shows on your services, not including seen or hidden items, taking into account your category preferences, and ordered according to goodness, recency, category balance - essentially this is the 'magic' personalized lists of things available to you, ordered according to what you might be most interested to watch.\r\n\r\n|Endpoint | Function|\r\n|:--|:--|\r\n|`GET /api/1/<apikey>/list/<userid>/<itemtype>/`| Get the personalized item list for the user |\r\n|`GET /api/1/<apikey>/list/_/<itemtype>/`| Get the best item list for anonymous users |\r\n\r\nReturn value is a list of ids.  Can also expand that to include metadata associated with the ID, and list inclusion data for specified events.  E.g. you could ask for the first 12 movie IDs, get the catalog metadata for them, and whether the user has rated the items or added them to their watchlist.\r\n\r\n\r\n## <a name=\"Recommendations\"></a> Recommendations\r\n\r\n- Item-item similarity\r\n- Recommended items for a user\r\n\r\nDocumentation coming soon.\r\n\r\nSee also [Personalized Lists](#PersonalizedLists).\r\n\r\n## <a name=\"Search\"></a> Search and Typeahead\r\n\r\nDocumentation coming soon.\r\n\r\n","google":"UA-32505739-8","note":"Don't delete this file! It's used internally to help with page regeneration."}